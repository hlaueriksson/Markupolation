<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <Version>2.0.0</Version>
    <PackageReleaseNotes>
IfMatch methods in ContentExtensions now use Func instead of Expression&lt;Func&gt; as predicate
    </PackageReleaseNotes>
    <Authors>Henrik Lau Eriksson</Authors>
    <Description>
Markupolation = Markup + String Interpolation
Extensions for HTML templating in C# with a fluent API:
‚å®Ô∏è var links = new[] { new { Url = "#", Title = "Foo", Active = true }, new { Url = "#", Title = "Bar", Active = false } };
‚å®Ô∏è links.Each((x, index) =&gt; a(href(x.Url), id($"link{index}"), x.IfMatch(x =&gt; x.Active, x =&gt; class_("active")), x.Title));
üñ®Ô∏è &lt;a href="#" id="link0" class="active"&gt;Foo&lt;/a&gt;&lt;a href="#" id="link1"&gt;Bar&lt;/a&gt;
    </Description>
    <PackageId>Markupolation.Extensions</PackageId>
    <PackageProjectUrl>https://github.com/hlaueriksson/Markupolation</PackageProjectUrl>
    <PackageIcon>icon.png</PackageIcon>
    <PackageReadmeFile>Markupolation.Extensions.md</PackageReadmeFile>
    <PackageTags>HTML;HTML5;Markup</PackageTags>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\..\icon.png" Pack="true" PackagePath="\" />
    <None Include="..\..\Markupolation.Extensions.md" Pack="true" PackagePath="\" />
  </ItemGroup>

  <Import Project="../../Analyzers.props" />

  <ItemGroup>
    <ProjectReference Include="..\Markupolation\Markupolation.csproj" />
  </ItemGroup>

</Project>
